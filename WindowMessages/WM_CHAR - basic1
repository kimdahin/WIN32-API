    //WM_CHAR 메시지는 문자 키가 발생했을 때 만들어지는 메시지이다.
    case WM_CHAR:
      {
          /*
          //WndProc()함수의 전역변수로 2가지 선언되어있음

          //99개의 문자를 저장할 수 있음
          static char string[100];
          //배열의 인덱스
          static int nIndex;
          */

          //WM_CHAR 메시지가 발생했을 때 부가적으로 발생되는 메시지가 wParam이고,
          //wParam에는 발생한 문자 값(1Byte의 아스키 코드 값)이 저장되어있다.
          //그 발생된 문자를 string배열에 넣어준다.
          string[nIndex] = (char)wParam; 
          nIndex++;

          //이 함수를 실행하면 WM_PAINT 메시지가 발생된다.
          //입력된 문자를 string 배열에 저장할 때마다 문자열을 WM_PAINT에서 출력해준다.
          InvalidateRect(hWnd, NULL, TRUE);
      }
      break;

     case WM_PAINT:
       {
            PAINTSTRUCT ps;
            HDC hdc = BeginPaint(hWnd, &ps);

            //문자열 출력
            TextOut(hdc, 0, 0, string, strlen(string));

            EndPaint(hWnd, &ps);
       }
       break; 
       
       
       
       /*
       
       문자열을 출력해보기
 
        WM_CHAR 메시지는 문자 키가 발생하였을 떄 생기는 메시지이다.
        어떤 문자 키인지는 wParam에 아스키코드값으로 저장이 되며 wPram을 char형으로 캐스팅하여서 string배열 안에 이어서 저장을 한다.
        그리고 한 문자를 저장할 때마다 InvalidateRect() 함수를 호출하여서 클라이언트 영역을 갱신한다.(재출력)
        클라이언트 영역이 갱신될 때에는 WM_PAINT메시지가 발생하기 때문에 그때 여태까지의 문자열을 TextOut()함수로 화면에 출력해주면 된다.
       
       */
